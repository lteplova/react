'use strict';

const data = {
    title: 'React',
    subtitle: [
        "Компоненты",
        "Выучил раз, используй везде!",
        "Использование JSX"
    ],
    article: [
        "Каждый компонент являются законченной частью пользовательского интерфейса и сам управляет своим состоянием, а композиция компонентов (соединение) позволяет создавать более сложные компоненты. Таким образом, создается иерархия компонентов, причем каждый отдельно взятый компонент независим сам по себе. Такой подход позволяет строить сложные интерфейсы, где есть множество состояний, и взаимодействовать между собой.",
        "После изучения React вы сможете использовать его концепции не только в браузере, но также и при разработке мобильных приложений с использованием React Native.",
        "JSX является языком, расширяющим синтаксис стандартного Javascript. По факту он позволяет писать HTML-код в JS-скриптах. Такой подход упрощает разработку компонентов и повышает читаемость кода."
    ]
}


const Section = () => {
    return (
        <section className="section open">
					<button>toggle</button>
					<h3 className="sectionhead">{item}</h3>
					<div className="articlewrap">
						<div className="article">
							Каждый компонент являются законченной частью пользовательского интерфейса и сам управляет
							своим состоянием, а композиция компонентов (соединение) позволяет создавать более сложные
							компоненты. Таким образом, создается иерархия компонентов, причем каждый отдельно взятый
							компонент независим сам по себе. Такой подход позволяет строить сложные интерфейсы, где есть
							множество состояний, и взаимодействовать между собой.
						</div>
					</div>
				</section>
    )

}

const Subtitle = () => {
    return (


    );
}

const Article = ({data}) => {data.article.map((item) => <div className="article" item={item} />)}
    

const App = ({data}) => {
    console.log(data.subtitle);
    
	return (
			<main className="main">
				<h2 className="title">{data.title}</h2>
				<section className="section open">
					<button>toggle</button>
					<h3 className="sectionhead">{item}</h3>
					<div className="articlewrap">
						<div className="article">
							Каждый компонент являются законченной частью пользовательского интерфейса и сам управляет
							своим состоянием, а композиция компонентов (соединение) позволяет создавать более сложные
							компоненты. Таким образом, создается иерархия компонентов, причем каждый отдельно взятый
							компонент независим сам по себе. Такой подход позволяет строить сложные интерфейсы, где есть
							множество состояний, и взаимодействовать между собой.
						</div>
					</div>
				</section>
				<section className="section">
					<button>toggle</button>
					<h3 className="sectionhead">Выучил раз, используй везде!</h3>
					<div class="articlewrap">
						<div className="article">
							После изучения React вы сможете использовать его концепции не только в браузере, но также и
							при разработке мобильных приложений с использованием React Native.
						</div>
					</div>
				</section>
				<section className="section">
					<button>toggle</button>
					<h3 className="sectionhead">Использование JSX</h3>
					<div className="articlewrap">
						<div className="article">
							JSX является языком, расширяющим синтаксис стандартного Javascript. По факту он позволяет
							писать HTML-код в JS-скриптах. Такой подход упрощает разработку компонентов и повышает
							читаемость кода.
						</div>
					</div>
				</section>
			</main>
          
        );
    
	
}